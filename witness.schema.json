{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$defs": {
    "producer": {
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tool that produced the invariant."
        },
        "version": {
          "type": "string",
          "description": "Version of the tool."
        },
        "configuration": {
          "type": "string",
          "description": "Configuration in which the tool ran. Consider using this property if there are substantially different configurations of the tool."
        },
        "description": {
          "type": "string",
          "description": "Additional description. Use this property for any information that does not fit into any of the above properties."
        },
        "command_line": {
          "type": "string",
          "description": "Command line with which the tool ran. Specifying the exact command possibly increases reproducibility."
        }
      }
    },
    "task": {
      "type": "object",
      "required": [
        "input_files",
        "input_file_hashes",
        "specification",
        "data_model",
        "language"
      ],
      "properties": {
        "input_files": {
          "description": "File(s) that were given as input to the verfier. Each file pattern must represent exactly one input file.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "input_file_hashes": {
          "type": "object",
          "description": "Mapping of each input file to its SHA-256 hash. Every file-name pattern listed in `input_files` must appear in this property.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "specification": {
          "type": "string",
          "description": "Specification against which the program was analyzed for producing the entry."
        },
        "data_model": {
          "description": "Data model that was assumed for the input program.",
          "enum": [
            "ILP32",
            "LP64"
          ]
        },
        "language": {
          "description": "Source language of the input files.",
          "enum": [
            "C"
          ]
        }
      }
    },
    "metadata": {
      "type": "object",
      "required": [
        "format_version",
        "uuid",
        "creation_time",
        "producer",
        "task"
      ],
      "properties": {
        "format_version": {
          "type": "string",
          "description": "Version of the verification-entries format that the entry is formatted in."
        },
        "uuid": {
          "type": "string",
          "description": "Unique identifier of the entry ([RFC4122](https://www.ietf.org/rfc/rfc4122.txt) defines the UUID format).",
          "format": "uuid"
        },
        "creation_time": {
          "type": "string",
          "description": "Date and time when the entry (not the file) was created.",
          "format": "date-time"
        },
        "producer": {
          "description": "Tool that produced the entry.",
          "$ref": "#/$defs/producer"
        },
        "task": {
          "description": "Verification task during which the entry was produced.",
          "$ref": "#/$defs/task"
        }
      }
    },
    "metadata-certificate": {
      "type": "object",
      "required": [
        "format_version",
        "uuid",
        "creation_time",
        "producer"
      ],
      "properties": {
        "format_version": {
          "type": "string",
          "description": "Version of the verification-entries format that the entry is formatted in."
        },
        "uuid": {
          "type": "string",
          "description": "Unique identifier of the entry ([RFC4122](https://www.ietf.org/rfc/rfc4122.txt) defines the UUID format).",
          "format": "uuid"
        },
        "creation_time": {
          "type": "string",
          "description": "Date and time when the entry (not the file) was created.",
          "format": "date-time"
        },
        "producer": {
          "description": "Tool that produced the entry.",
          "$ref": "#/$defs/producer"
        }
      }
    },
    "location": {
      "type": "object",
      "required": [
        "file_name",
        "file_hash",
        "line",
        "column",
        "function"
      ],
      "properties": {
        "file_name": {
          "type": "string",
          "description": "Name of the file containing the loop where the invariant holds. Must be present in `task.input_files`."
        },
        "file_hash": {
          "type": "string",
          "description": "Hash of the file containing the loop where the invariant holds."
        },
        "line": {
          "type": "integer",
          "description": "Line where the invariant holds (starting with 1).",
          "minimum": 1
        },
        "column": {
          "type": "integer",
          "description": "Column where the invariant holds in that line (starting with 0). For example, if `column` has value `0` then the invariant holds _before_ the first source-code token of the line.",
          "minimum": 0
        },
        "function": {
          "type": "string",
          "description": "Name of the function in which the invariant holds."
        }
      }
    },
    "invariant": {
      "type": "object",
      "required": [
        "string",
        "type",
        "format"
      ],
      "properties": {
        "string": {
          "type": "string",
          "description": "The actual invariant formula."
        },
        "type": {
          "description": "How to interpret `string`. The following values are supported:\n\n* _assertion_: Has the C semantics of `assert(<string>)` inserted at the specified `location`.",
          "enum": [
            "assertion"
          ]
        },
        "format": {
          "description": "Format of the string. The following values are supported:\n\n* _C_: Expression in C language.",
          "enum": [
            "C"
          ]
        }
      }
    },
    "target": {
      "type": "object",
      "required": [
        "uuid",
        "type",
        "file_hash"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Unique identifier of the entry ([RFC4122](https://www.ietf.org/rfc/rfc4122.txt) defines the UUID format).",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "description": "TODO"
        },
        "file_hash": {
          "type": "string",
          "description": "TODO"
        }
      }
    },
    "certification": {
      "type": "object",
      "required": [
        "string",
        "type",
        "format"
      ],
      "properties": {
        "string": {
          "type": "string",
          "description": "TODO"
        },
        "type": {
          "description": "TODO",
          "enum": [
            "verdict"
          ]
        },
        "format": {
          "description": "TODO",
          "enum": [
            "confirmed | rejected"
          ]
        }
      }
    }
  },
  "type": "array",
  "items": {
    "oneOf": [
      {
        "title": "Loop Invariant Entry",
        "description": "An loop invariant entry",
        "type": "object",
        "required": [
          "entry_type",
          "metadata",
          "location",
          "loop_invariant"
        ],
        "properties": {
          "entry_type": {
            "const": "loop_invariant"
          },
          "metadata": {
            "$ref": "#/$defs/metadata"
          },
          "location": {
            "$ref": "#/$defs/location"
          },
          "loop_invariant": {
            "$ref": "#/$defs/invariant"
          }
        }
      },
      {
        "title": "Loop Invariant Certificate Entry",
        "description": "An loop invariant certificate entry",
        "type": "object",
        "required": [
          "entry_type",
          "metadata",
          "target",
          "certification"
        ],
        "properties": {
          "entry_type": {
            "const": "loop_invariant_certificate"
          },
          "metadata": {
            "$ref": "#/$defs/metadata-certificate"
          },
          "target": {
            "$ref": "#/$defs/target"
          },
          "certification": {
            "$ref": "#/$defs/certification"
          }
        }
      }
    ]
  }
}